# largest software project i think -- but it enables the largest amount of software to project
import llvm
    url: 	'https://github.com/llvm/llvm-project'
	commit: 'main'
	args {
		-S ../llvm
		-G Ninja 
		-DLLVM_ENABLE_ASSERTIONS=OFF
		-DLLVM_ENABLE_PROJECTS='clang;lld;lldb;compiler-rt'
		-DLLVM_TOOL_GOLD_BUILD=ON
		-DLLVM_ENABLE_FFI=OFF
	  	-DLLVM_ENABLE_THREADS=ON
		-DLLVM_PARALLEL_LINK_JOBS=1
		-DLLVM_BUILD_TOOLS=ON
		-DLLVM_ENABLE_LTO=OFF
		-DLLDB_INCLUDE_TESTS=OFF
		-DLLDB_EXPORT_ALL_SYMBOLS=1
		-DLLVM_ENABLE_RTTI=OFF
		-DLLVM_BINUTILS_INCDIR=/usr/include
		-DCLANG_DEFAULT_PIE_ON_LINUX=ON
		-DCLANG_CONFIG_FILE_SYSTEM_DIR=/etc/clang
		-DLLVM_ENABLE_LIBCXX=OFF
		-DBUILD_SHARED_LIBS=ON
		-DLLDB_ENABLE_PYTHON=OFF
		-DLLVM_TARGETS_TO_BUILD='host;X86;AArch64'
	}
	args-linux {
		-DCLANG_DEFAULT_CXX_STDLIB=libstdc++
	}
	args-darwin {
		-DCMAKE_CXX_FLAGS="-stdlib=libc++"
		-DCLANG_DEFAULT_CXX_STDLIB=libc++
		-DDEFAULT_SYSROOT=$(xcrun --sdk macosx --show-sdk-path)
	}
	link {
        -lm
		-lclang
		-lLLVMCore
		-lLLVMBitReader
		-lLLVMBitWriter
		-lLLVMIRReader
		-lLLVMSupport
		-lLLVMExecutionEngine
		-lLLVMTarget
		-lLLVMTargetParser
		-lLLVMTransformUtils
		-lLLVMAnalysis
		-lLLVMProfileData
		-lLLVMAArch64AsmParser
		-lLLVMAArch64CodeGen
		-lLLVMAArch64Desc
		-lLLVMAArch64Info
		-lLLVMAArch64Utils
		-lLLVMX86CodeGen
		-lLLVMX86AsmParser
		-lLLVMX86Desc
		-lLLVMX86Info
	}

import ffi
	url: 	'https://github.com/libffi/libffi'
	commit: 'e28a0d5'
	env:	CC: 'gcc'

cflags {
	-fPIC
	-fmacro-backtrace-limit=0
	-Wno-write-strings
	-Wno-compare-distinct-pointer-types
	-Wno-deprecated-declarations
	-Wno-incompatible-pointer-types
	-Wno-shift-op-parentheses
	-Wfatal-errors
	-Wno-incompatible-library-redeclaration
	-fvisibility=default
}

lflags {
	-Wl,--as-needed
}
